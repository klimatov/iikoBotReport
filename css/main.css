html {
  -webkit-font-smoothing: antialiased; /* сглаживаем шрифт */
}

body {
  background-color: #111111; 
  background: linear-gradient(rgba(0,0,0,0.85), rgba(0,0,0,0.85)), /* заливаем картинку черным полупрозрачным */
  url('kupec.jpg') no-repeat center center fixed; /* картинка для фона */
  -webkit-background-size: cover;
  -moz-background-size: cover;
  background-size: cover; /* Масштабирует изображение с сохранением пропорций так, чтобы его ширина или высота равнялась ширине или высоте блока */
  font-family: "Tahoma", sans-serif;
}
@media screen and (min-width: 40em) { /* для экранных устройств с шириной области просмотра не менее 40 символов*/
  body {
    font-size: 0.95em;
  }
}

.form .button, .form .select, .form .textarea, .form .text-input, .form .option-input + label, .form .checkbox-input + label, .form .icons{
  padding: 0.70em 1em; /* Первое значение устанавливает поля от верхнего и нижнего края, второе — от левого и правого. */
	-webkit-appearance: none; /*к элементу вообще не нужно применять какой-либо стиль/оформление */
     -moz-appearance: none;
          appearance: none;
  outline: none; /*внешней границы на всех четырех сторонах элемента */
  line-height: normal; /* Устанавливает интерлиньяж (межстрочный интервал) текста. normal - Расстояние между строк вычисляется автоматически. */
  border-radius: 0; /* Устанавливает радиус скругления уголков рамки */
  border: none; /* свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента */
  background: none; /*свойство background позволяет установить одновременно до пяти характеристик фона */
  display: block; /* свойство, которое определяет, как элемент должен быть показан в документе. block - Элемент показывается как блочный. Применение этого значения для встроенных элементов, например тега <span>, заставляет его вести подобно блокам — происходит перенос строк в начале и в конце содержимого.*/
} /* убираем лишнее и устанавливаем основное */

.form .label, .form .label-collapse {
  font-weight: bold;
  color: white;
  padding-top: 0; /* Устанавливает значение поля от верхнего края содержимого элемента */
  padding-left: 0;
  letter-spacing: 0.025em; /* Определяет интервал между символами в пределах элемента */
  font-size: 1.125em;
  line-height: 1.25; /* интерлиньяж -  число больше нуля воспринимается как множитель от размера шрифта текущего текста */
  position: relative; /* Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице. relative
Положение элемента устанавливается относительно его исходного места. Добавление свойств left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения. */
  z-index: 100; /* Каждый элемент может находиться как ниже, так и выше других объектов веб-страницы, их размещением по z-оси и управляет z-index. Это свойство работает только для элементов, у которых значение position задано как absolute, fixed или relative. */
} /* настраиваем заголовки */


.required .form .label:after, .form .required .label:after {
  content: " *";
  color: #E8474C;
  font-weight: normal;
  font-size: 0.75em;
  vertical-align: top;
} /* красные звездочки - свойства обязательных к заполнению */

.form .select, .form .textarea, .form .text-input, .form .option-input + label, .form .checkbox-input + label{
  font: inherit; /* inherit - Наследует значение родителя. */
  line-height: normal;
  width: 100%; /* Устанавливает ширину блочных или заменяемых элементов */
  box-sizing: border-box; /* Применяется для изменения алгоритма расчета ширины и высоты элемента. */
  background-color: #222222;
  /* background: #222222;*/
  color: white;
  position: relative;
/*!!! z-index: 100; */  
} /* ставим серый фон и отображаем элементы (поля формы) */

.customSelect:placeholder, .form .select:placeholder, .form .textarea:placeholder, .form .text-input:placeholder, .form .option-input + label:placeholder, .form .checkbox-input + label:placeholder {
  color: white;
} /* цвет текста плэйсхолдеров */

.customSelect:-webkit-autofill, .form .select:-webkit-autofill, .form .textarea:-webkit-autofill, .form .text-input:-webkit-autofill, .form .option-input + label:-webkit-autofill, .form .checkbox-input + label:-webkit-autofill {
  box-shadow: 0 0 0px 1000px #111111 inset; /* Добавляет тень к элементу */
  -webkit-text-fill-color: white; /* определяет цвет заливки символов текста */
  border-top-color: #111111;
  border-left-color: #111111;
  border-right-color: #111111;
} /*!!! отмена авто заливки фона выбора желтым */

/*
.customSelect:not(:focus):not(:active).error, .form .select:not(:focus):not(:active).error, .form .textarea:not(:focus):not(:active).error, .form .text-input:not(:focus):not(:active).error, .form .option-input + label:not(:focus):not(:active).error, .form .checkbox-input + label:not(:focus):not(:active).error, .error .customSelect:not(:focus):not(:active), .error .form .select:not(:focus):not(:active), .form .error .select:not(:focus):not(:active), .error .form .textarea:not(:focus):not(:active), .form .error .textarea:not(:focus):not(:active), .error .form .text-input:not(:focus):not(:active), .form .error .text-input:not(:focus):not(:active), .error .form .option-input + label:not(:focus):not(:active), .form .error .option-input + label:not(:focus):not(:active), .error .form .checkbox-input + label:not(:focus):not(:active), .form .error .checkbox-input + label:not(:focus):not(:active) {
  background-size: 8px 8px;
  background-image: linear-gradient(135deg, rgba(232, 71, 76, 0.5), rgba(232, 71, 76, 0.5) 25%, transparent 25%, transparent 50%, rgba(232, 71, 76, 0.5) 50%, rgba(232, 71, 76, 0.5) 75%, transparent 75%, transparent);
  background-repeat: repeat;
}
*/

.form:not(.has-magic-focus) .customSelect.customSelectFocus, .form:not(.has-magic-focus) .customSelect:active, .form:not(.has-magic-focus) .select:active, .form:not(.has-magic-focus) .textarea:active, .form:not(.has-magic-focus) .text-input:active, .form:not(.has-magic-focus) .option-input + label:active, .form:not(.has-magic-focus) .checkbox-input + label:active, .form:not(.has-magic-focus) .customSelect:focus, .form:not(.has-magic-focus) .select:focus, .form:not(.has-magic-focus) .textarea:focus, .form:not(.has-magic-focus) .text-input:focus, .form:not(.has-magic-focus) .option-input + label:focus, .form:not(.has-magic-focus) .checkbox-input + label:focus {
  background-color: #4E4E4E;   /*   !!!!!! */
} /* цвет фона фокуса */

.form .option-input, .form .checkbox-input {
  border: none;
  clip: rect(0 0 0 0); /* область позиционированного элемента, в которой будет показано его содержимое. Все, что не помещается в эту область, будет обрезано и становится невидимым */
  height: 1px;
  margin: -1px;
  overflow: hidden; /*  управляет отображением содержания блочного элемента, если оно целиком не помещается и выходит за область заданных размеров */
  padding: 0;
  position: absolute;
  width: 1px;
} /* внешний вид чекбоксов (прячем) */

.form .option-input + label, .form .checkbox-input + label {
  display: inline-block; /* inline-block	Это значение генерирует блочный элемент, который обтекается другими элементами веб-страницы подобно встроенному элементу */
/* !!!! */
  width: auto;
  color: #4E4E4E;
  position: relative;
  -webkit-user-select: none; /* Управляет поведением выделения текста и других элементов на странице */
     -moz-user-select: none; /* Пользователю запрещено выделять элемент. */
      -ms-user-select: none;
          user-select: none;
  cursor: pointer; /* Устанавливает форму курсора, когда он находится в пределах элемента */
} /* внешний вид чекбоксов с лэйблом,  неактивный вид, вид курсора  */

.form .option-input:focus + label, .form .checkbox-input:focus + label, .form .option-input:active + label, .form .checkbox-input:active + label {
  color: #4E4E4E;
}

.form .option-input:checked + label, .form .checkbox-input:checked + label {
  color: white;
} /* отмеченные чекбоксы - белые */

.form .button {
  font: inherit;
  line-height: normal;
  cursor: pointer;
  background: #E8474C;
  color: white;
  font-weight: bold;
  width: auto;
  margin-left: auto;
  font-weight: bold;
  padding-left: 2em;
  padding-right: 2em;
} /* внешний вид кнопок */

.form .button:hover, .form .button:focus, .form .button:active, .form .icons:hover, .form .icons:focus, .form .icons:active {
  color: white;
  border-color: white;
} /* выбранная кнопка (не работает) */

.form .button:active, .form .icons:active {
  position: relative;
  top: 1px;
  left: 1px;
} /* сдвиг кнопки при нажатии */

body {
  padding: 2em;
} /* отступ во всей форме на 2 символа */

.form, .ul, li {
  max-width: 45em;
  margin: 0 auto; /* Устанавливает величину отступа от каждого края элемента Первое значение устанавливает отступ от верхнего и нижнего края, второе — от левого и правого. */
  position: relative;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between; /* Отвечает за выравнивание элементов по главной оси Space-between задаёт одинаковое расстояние между блоками*/
  align-items: flex-end; /* вид блоков по вертикали - stretch - растягиваем, flex-end - ровняем по низу */
} /* форма по середине, с отступами, правила отображения внутри строки */

.form .field{
  width: 100%;
  margin: 0 0 1.5em 0;
}

.ul, .li{
  width: 100%;
    margin: 0 0 0 0;
    padding-left: 0;
}

@media (max-width: 40em) { /* Если экран маленький и поля переносятся */
    .li{
      margin: 0 0 1.5em 0;
    }
}

@media screen and (min-width: 40em) {
  .form .field.half {
    width: calc(50% - 1px);
  }
} /* ширина для половинок полей */

.form .field.last {
  margin-left: auto;
}

.form .textarea {
  max-width: 100%;
}

.form .checkboxes, .form .options {
  padding: 0;
  margin: 0;
  list-style-type: none; /* Отменяет маркеры для списка */
  overflow: hidden;
} /* для чекбоксов и радио убираем отступы */

.form .checkbox, .form .option {
  float: left;
  margin: 1px;
} /* несколько в одной строке */

.customSelect {
  pointer-events: none; /* позволяет контролировать события, при которых элемент может стать объектом события мыши */
}

.customSelect:after {
  content: "";
  pointer-events: none;
  width: 0.5em;
  height: 0.5em;
  border-style: solid; /*Устанавливает стиль границы вокруг элемента solid - обычная */
  border-color: white;
  border-width: 0 3px 3px 0;
  position: absolute;
  top: 50%;
  margin-top: -0.625em;
  right: 1em;
  transform-origin: 0 0; /* Устанавливает координаты точки, относительно которой будет происходить трансформация элемента. */
  transform: rotate(45deg); /* Трансформирует элемент, в частности, позволяет его масштабировать, вращать, сдвигать, наклонять, а также комбинировать виды трансформаций. */
} /* в конце элемента стрелка из повернутого квадрата */

.customSelect.customSelectFocus:after {
  border-color: white;
}

.form .select {
  text-indent: 0.01px; /* Устанавливает величину отступа первой строки блока текста */
  text-overflow: ellipsis; /* Определяет параметры видимости текста в блоке, если текст целиком не помещается в заданную область !important позволяет повысить приоритет стиля */
    /* text-overflow: "" !important; */
		background:url('arrow.png') no-repeat right center;
	background-size:25px;
	background-color:#222222;
    cursor: pointer;
}

.label.list {
  text-indent: 1.5em; /* Устанавливает величину отступа первой строки блока текста */
  cursor: pointer; 
  
}
.label.list.expand {
  background:url('arrow.png') no-repeat right center ;
	background-size:1.5em;     
  background-position: left;
}
.label.list.collapsed {
  background:url('arrow-collapsed.png') no-repeat right center ;
	background-size:1.5em;     
  background-position: left;
}

.field.list{
  margin: 0 0 0 0;
}

label {
  /* Убираем выделение с заголовков. (Убираем выделение при сворачивании и двойном клике) */
 -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
 -webkit-tap-highlight-color: transparent;
 -webkit-user-select: none;
 -khtml-user-select: none;
 -moz-user-select: none;
 -ms-user-select: none;
  user-select: none;
}

.form .select::-ms-expand {
  display: none;
} /* убираем стрелку селекта у интернет эксплорера */

.form .icons {
    height: auto;
    width: auto;
    line-height: normal;
    cursor: pointer;
    background-color: #222222;
    color: white;
    margin: 0 0 1.5em 0;
    padding: 0.4em 0.4em;
  }

  @media screen and (min-width: 40em) {
    .form .field.withicons {
      width: calc(40% - 1px);
    }
  } /* ширина для полей c иконками */

  @media screen and (min-width: 40em) {
    .form .text-input.withicons {
      width: calc(40% - 1px);
    }
  } /* ширина для полей c иконками */

  .form .one_line {
    height: auto;
    width: auto;
    margin: 0 0 1.5em 0;
    padding: 0 1px;
  }

  .form .text-input[type="time"] {
    cursor: default;
  }

  .form .text-input[type="time"]::-webkit-calendar-picker-indicator {
    cursor: pointer;
    height: 1em;
    filter: brightness(0) invert(1);
    }

  .form .text-input[type="datetime-local"] {
    cursor: default;
  }

  .form .text-input[type="datetime-local"]::-webkit-calendar-picker-indicator {
    cursor: pointer;
    height: 1em;
    filter: brightness(0) invert(1);
    margin-left: -10px;
    margin-right: -10px;
    }

  .form .text-input.time {
      padding-top: 0.62em;
      padding-bottom: 0.62em;
  }

  .form .text-input.time.actual {
      color: white;
  }

  .form .text-input.time.outdated {
      color: red;
  }

  .text-input.refresh {
    /* background:url('send.png') no-repeat right center ;   
    background-size: 3em;
    background-position: right 0.6em bottom 0;
    background-color: #222222; */
  }

  .refresh{
    height:2.6em;
    filter: brightness(0) invert(1);
    float: right;
    position: relative;
    top: -0.7em;
  }

  .resize{
    height: 1.6em;
    /* width: 100%; */
    filter: brightness(0) invert(1);
    /* float: right; */
    position: relative;
}


